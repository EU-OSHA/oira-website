<?php

include_once 'oira.features.inc';

define('SOLR_SEARCH_INDEX', 'default_multilingual_node_index');

/**
 * Implements hook_menu().
 */
function oira_menu() {
  $items['admin/config/system/oira_config'] = array(
    'title' => 'OiRA configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('oira_configuration_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['page-not-found'] = array(
    'title' => 'Page not found',
    'page callback' => 'oira_page_not_found',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function oira_page_not_found() {
  drupal_set_title(t('Page not found'));
  $html = '<p>' . t('Sorry, we can\'t find what you are looking for.') . '</p>';
  $html .= '<p>' . t('You could use the search above, instead or go back to !home.', array('!home' => l(t('Home'), ''))) . '</p>';
  return $html;
}
/**
 * Implements hook_theme().
 */
function oira_theme() {
  return array(
    'news_share_widget' => array(
      'variables' => array(
        'url' => '', // Page URL
        'node' => array(), // Current node
        'tweet_url' => '',
        'language' => '', // Current language
        'options' => array(), // Additional configuration options
      ),
      'template' => 'templates/news_share_widget',
    ),
    'article_share_widget' => array(
      'variables' => array(
        'url' => '', // Page URL
        'node' => array(), // Current node
        'tweet_url' => '',
        'language' => '', // Current language
        'options' => array(), // Additional configuration options
      ),
      'template' => 'templates/article_share_widget',
    ),
    'oira_social_link_icon' => array(
      'variables' => array('element' => NULL),
    ),
  );
}

function oira_language_list_options($prefix = TRUE, $native = TRUE) {
  // used by hwc_practical_tool_get_facets_def and _oira_promotional_material_search_form_get_facets
  // for tools and promotional materials we don't exclude Catalan
  $disabled = osha_disabled_language_list();
  unset($disabled['ca']);
  $languages = osha_language_list_options($native, TRUE, $disabled);
  if ($prefix) {
    foreach ($languages as $lang_code => $value) {
      $languages[$lang_code] = strtoupper($lang_code) . ' - ' . $value;
    }
  }
  return $languages;
}

/**
 * Implements hook_field_formatter_info().
 */
function oira_field_formatter_info() {
  return array(
    'oira_social_link_icon' => array(
      'label' => t('Social link with icon'),
      'field types' => array('link_field'),
      'multiple values' => FIELD_BEHAVIOR_DEFAULT,
      'module' => 'oira',
      'settings' => array(),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function oira_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $settings = $display['settings'];

  $elements = array();
  foreach ($items as $delta => $item) {
    $elements[$delta] = array(
      '#markup' => theme('oira_social_link_icon', array('element' => $item)),
    );
  }
  return $elements;
}


/**
 * Implements hook_field_formatter_settings_summary().
 */
function oira_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $summary = '';
  if ($display['type'] == 'oira_social_link_icon') {
    $summary = t('An icon of the social network.');
  }
  return $summary;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function oira_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $settings = $instance['display'][$view_mode]['settings'];
  $element = array();
  return $element;
}


/**
 * Implements hook_field_extra_fields().
 */
function oira_field_extra_fields() {

  $share_widget = array(
    'display' => array(
      'share_widget' => array(
        'label' => t('Share widget'),
        'description' => t('The bar with links to social websites'),
        'weight' => 0,
      ),
    ),
  );
  $extra['node']['news'] = $share_widget;
  $extra['node']['article'] = $share_widget;
  $extra['node']['practical_tool'] = $share_widget;

  foreach (node_type_get_types() as $node_type => $bundle) {
    $extra['node'][$node_type]['display']['node_type'] = array(
      'label' => t('Node type'),
      'description' => t('The node bundle'),
      'weight' => 0,
    );
  }
  return $extra;
}


/**
 * Implements hook_node_view().
 */
function oira_node_view($node, $view_mode, $langcode) {
  $share_widget_content_types = array(
    'news',
    'article',
    'practical_tool',
  );
  // Array of nids where to hide the share widget.
  $no_share_widget = array();
  if ($view_mode == 'full'
    && in_array($node->type, $share_widget_content_types)
    && !in_array($node->nid, $no_share_widget)) {
    $options = array();
    $extra_fields = field_info_extra_fields('node', $node->type, 'display');
    if (!empty($extra_fields['share_widget']['display']['default']['visible'])) {
      if (in_array($node->type, array('article'))) {
        $options['rss_hide'] = 1;
      }
      $node->content['share_widget'] = array('#markup' => oira_news_share_widget($node, $options));
      if (in_array($node->type, array('news'))) {
        $node->content['share_widget_footer'] = array('#markup' => oira_news_share_widget($node, $options));
      }
    }
  }

  if ($view_mode == 'full' && $node->type == 'news') {
    $link_title = t('Back to OiRA news');
    $link_href = 'news';

    $node->content['back_to_news'] = [
      '#type' => 'markup',
      '#markup' => '<div class="back-to-news pull-right">' . l($link_title, $link_href, array()) . '</div>',
      '#weight' => 0,
    ];
  }

  $extra_fields = field_info_extra_fields('node', $node->type, 'display');
  $extra_field_pc = $extra_fields['node_type'];
  if (!empty($extra_field_pc['display'][$view_mode]['visible'])) {
    $types = node_type_get_types();
    $display = $extra_fields['node_type']['display'];
    $node->content['node_type'] = [
      '#type' => 'markup',
      '#markup' => '<span class="custom-field-node-type">' . t($types[$node->type]->name) . '</span>',
      '#weight' => (int) $display[$view_mode]['weight'],
    ];
  }
}

/**
 * Implements hook_field_attach_view_alter().
 */
function oira_field_attach_view_alter(&$output, $context) {
  if (!empty($context['entity']->type)) {
    if (!empty($output['body'][0]['#markup']) && $context['entity']->type == 'article') {
      $body =& $output['body'][0]['#markup'];
      $count = 0;
      $body = str_replace('--HEADING_PAGINATION--', '<span class="oira-heading-pagination-placeholder"></span>', $body, $count);
      if ($count) {
        drupal_add_js(drupal_get_path('module', 'oira') . '/js/article_heading_pagination.js');
      }
    }
  }
}

function oira_news_share_widget($node, $options = array()) {
  global $language;
  /** @var stdClass $wrapper */
  $type = 'other';
  if (!empty($options['page']) && $options['page'] === TRUE) {
    $url = url(current_path(), array('absolute' => TRUE));
    $title = drupal_get_title();
  }
  else {
    $url = url('node/' . $node->nid, array('absolute' => TRUE));
    $title = $node->title;
    $type = $node->type;
  }
  // Add services javascript.
  $site_name = variable_get('site_name', '');
  // Construct the tweet.
  $twitter_text = $title . ' | ' . $site_name;
  $tweet_url = url('https://twitter.com/intent/tweet', array(
    'query' => array(
      'original_referer' => $url,
      'text' => $twitter_text,
      'url' => shorten_url($url),
    ),
  ));
  $vars = array(
    'url' => $url,
    'tweet_url' => $tweet_url,
    'node' => $node,
    'language' => $language,
    'options' => $options,
    'label' => t('Share this article'),
    'type' => $type,
  );
  // Custom label for videos related articles.
  if (!empty($node->nid) && ($node->nid == 160 || $node->nid == 108)) {
    $vars['label'] = t('Share this video');
  }

  // Merge default vars with ones from options.
  $vars = $options + $vars;
  switch ($vars['type']) {
    case 'article':
      $widget = theme('article_share_widget', $vars);
      break;

    default:
      $widget = theme('news_share_widget', $vars);
      break;
  }
  return $widget;
}

/**
 * Implments hook_form_FORM_ID_alter().
 */
function oira_form_chosen_admin_settings_alter(&$form, $form_state) {
  // Add options to chosen 30.
  $form['chosen_minimum_single']['#options']['30'] = '30';
  $form['chosen_minimum_multiple']['#options']['30'] = '30';
}

function oira_configuration_form($form, &$form_state) {
  $form = array();

  $options = array();
  if ($vocabulary = taxonomy_vocabulary_machine_name_load('tags')) {
    if ($terms = taxonomy_get_tree($vocabulary->vid)) {
      foreach ($terms as $term) {
        $options[$term->tid] = str_repeat('-', $term->depth) . i18n_taxonomy_term_name($term);
      }
    }
  }
  $form['oira_allowed_tags'] = array(
    '#type' => 'select',
    '#title' => 'Allowed tags',
    '#multiple' => TRUE,
    '#options' => $options,
    '#default_value' => variable_get('oira_allowed_tags', array()),
  );

  $form = system_settings_form($form);
  return $form;
}

/**
 * Implements hook_form_alter().
 */
function oira_form_alter(&$form, &$form_state, $form_id) {
  $restrict_tags_on_bundles = array('news');
  if (isset($form['#node']->type)
    && in_array($form['#node']->type, $restrict_tags_on_bundles)
    && !empty($form['field_tags'])) {
    $form['field_tags']['#after_build'][] = 'oira_alter_tags_term_option_list';
  }
}

function oira_alter_tags_term_option_list($form_element, &$form_state) {
  if (isset($form_element[LANGUAGE_NONE]['#options'])) {
    $form_element[LANGUAGE_NONE]['#options'] = oira_exclude_tags_options($form_element[LANGUAGE_NONE]['#options']);
  }
  else {
    foreach (element_children($form_element[LANGUAGE_NONE]) as $idx) {
      if (!empty($form_element[LANGUAGE_NONE][$idx]['tid']['#options'])) {
        $form_element[LANGUAGE_NONE][$idx]['tid']['#options'] = oira_exclude_tags_options($form_element[LANGUAGE_NONE][$idx]['tid']['#options']);
      }
    }
  }
  return $form_element;
}

function oira_exclude_tags_options($options) {
  $allowed = variable_get('oira_allowed_tags', array());
  $allowed = array_intersect_key($options, array_flip($allowed));
  return $allowed;
}

/**
 * Implements hook_entity_info_alter().
 */
function oira_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['body'] = array(
    'label' => t('Body'),
    'custom settings' => TRUE,
  );
}

function theme_oira_social_link_icon($element) {
  $return = '';
  $url = $element['element']['url'];
  $parts = parse_url($url);
  if ($parts) {
    $network = preg_replace('/(.*\.|^)([^\.]+)\.com$/', '\2', $parts['host']);
    if ($network) {
      $return = theme('link', array(
          'path' => $url,
          'text' => '<span class="social-profile-icon social-profile-icon-' . $network . '">' . $parts['host'] . $parts['path'] . '</span>',
          'options' => array(
            'html' => TRUE,
            'attributes' => array(
              'class' => "social-profile-link social-profile-icon-$network",
            ),
          ),
        )
      );
    }
  }
  return $return;
}
